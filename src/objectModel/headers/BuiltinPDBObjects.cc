/*****************************************************************************
 *                                                                           *
 *  Copyright 2018 Rice University                                           *
 *                                                                           *
 *  Licensed under the Apache License, Version 2.0 (the "License");          *
 *  you may not use this file except in compliance with the License.         *
 *  You may obtain a copy of the License at                                  *
 *                                                                           *
 *      http://www.apache.org/licenses/LICENSE-2.0                           *
 *                                                                           *
 *  Unless required by applicable law or agreed to in writing, software      *
 *  distributed under the License is distributed on an "AS IS" BASIS,        *
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. *
 *  See the License for the specific language governing permissions and      *
 *  limitations under the License.                                           *
 *                                                                           *
 *****************************************************************************/
// Auto-generated by code in SConstruct

// first, record all of the type codes
objectTypeNamesList [getTypeName <Employee> ()] = 1;
objectTypeNamesList [getTypeName <StorageTestSetScan> ()] = 2;
objectTypeNamesList [getTypeName <StorageGetData> ()] = 3;
objectTypeNamesList [getTypeName <Nothing> ()] = 4;
objectTypeNamesList [getTypeName <DispatcherAddData> ()] = 5;
objectTypeNamesList [getTypeName <CatCreateDatabaseRequest> ()] = 6;
objectTypeNamesList [getTypeName <Object> ()] = 7;
objectTypeNamesList [getTypeName <StoragePagePinned> ()] = 8;
objectTypeNamesList [getTypeName <BackendExecuteSelection> ()] = 9;
objectTypeNamesList [getTypeName <CatTypeSearchResult> ()] = 10;
objectTypeNamesList [getTypeName <CatTypeNameSearchResult> ()] = 11;
objectTypeNamesList [getTypeName <ExecuteQueryOnSingleHost> ()] = 12;
objectTypeNamesList [getTypeName <Ack> ()] = 13;
objectTypeNamesList [getTypeName <KeepGoing> ()] = 14;
objectTypeNamesList [getTypeName <StorageRemoveUserSet> ()] = 15;
objectTypeNamesList [getTypeName <StorageAddDatabase> ()] = 16;
objectTypeNamesList [getTypeName <ExecuteQueriesOnCluster> ()] = 17;
objectTypeNamesList [getTypeName <DoneWithResult> ()] = 18;
objectTypeNamesList [getTypeName <StorageTestSetCopy> ()] = 19;
objectTypeNamesList [getTypeName <ExecuteQuery> ()] = 20;
objectTypeNamesList [getTypeName <GetListOfNodes> ()] = 21;
objectTypeNamesList [getTypeName <SetScan> ()] = 22;
objectTypeNamesList [getTypeName <QueryDone> ()] = 23;
objectTypeNamesList [getTypeName <StorageNoMorePage> ()] = 24;
objectTypeNamesList [getTypeName <CatSharedLibraryResult> ()] = 25;
objectTypeNamesList [getTypeName <RequestResources> ()] = 26;
objectTypeNamesList [getTypeName <PlaceOfQueryPlanner> ()] = 27;
objectTypeNamesList [getTypeName <StorageAddTempSet> ()] = 28;
objectTypeNamesList [getTypeName <StorageGetDataResponse> ()] = 29;
objectTypeNamesList [getTypeName <Handle <Nothing>> ()] = 30;
objectTypeNamesList [getTypeName <StorageAddSet> ()] = 31;
objectTypeNamesList [getTypeName <StorageUnpinPage> ()] = 32;
objectTypeNamesList [getTypeName <Company> ()] = 33;
objectTypeNamesList [getTypeName <CloseConnection> ()] = 34;
objectTypeNamesList [getTypeName <CatSetObjectTypeRequest> ()] = 35;
objectTypeNamesList [getTypeName <ListOfNodes> ()] = 36;
objectTypeNamesList [getTypeName <Map <Nothing>> ()] = 37;
objectTypeNamesList [getTypeName <MyEmployee> ()] = 38;
objectTypeNamesList [getTypeName <String> ()] = 39;
objectTypeNamesList [getTypeName <Vector <Nothing>> ()] = 40;
objectTypeNamesList [getTypeName <BackendTestSetScan> ()] = 41;
objectTypeNamesList [getTypeName <ShutDown> ()] = 42;
objectTypeNamesList [getTypeName <DispatcherRegisterPartitionPolicy> ()] = 43;
objectTypeNamesList [getTypeName <StorageAddType> ()] = 44;
objectTypeNamesList [getTypeName <CheckEmployee> ()] = 45;
objectTypeNamesList [getTypeName <PairArray <Nothing>> ()] = 46;
objectTypeNamesList [getTypeName <Supervisor> ()] = 47;
objectTypeNamesList [getTypeName <QueryPermitResponse> ()] = 48;
objectTypeNamesList [getTypeName <CatSharedLibraryRequest> ()] = 49;
objectTypeNamesList [getTypeName <StorageAddTempSetResult> ()] = 50;
objectTypeNamesList [getTypeName <CatCreateSetRequest> ()] = 51;
objectTypeNamesList [getTypeName <NodeDispatcherData> ()] = 52;
objectTypeNamesList [getTypeName <QueryOutput <Nothing>> ()] = 53;
objectTypeNamesList [getTypeName <StorageGetSetPages> ()] = 54;
objectTypeNamesList [getTypeName <QueryPermit> ()] = 55;
objectTypeNamesList [getTypeName <StoragePinPage> ()] = 56;
objectTypeNamesList [getTypeName <BackendTestSetCopy> ()] = 57;
objectTypeNamesList [getTypeName <DeleteSet> ()] = 58;
objectTypeNamesList [getTypeName <StorageAddData> ()] = 59;
objectTypeNamesList [getTypeName <StorageRemoveTempSet> ()] = 60;
objectTypeNamesList [getTypeName <Set <Nothing>> ()] = 61;
objectTypeNamesList [getTypeName <CatTypeNameSearch> ()] = 62;
objectTypeNamesList [getTypeName <NodeInfo> ()] = 63;
objectTypeNamesList [getTypeName <SimpleRequestResult> ()] = 64;
objectTypeNamesList [getTypeName <CatRegisterType> ()] = 65;
objectTypeNamesList [getTypeName <Array <Nothing>> ()] = 66;

// now, record all of the vTables
{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		Employee tempObject;
		allVTables [1] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate Employee to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		StorageTestSetScan tempObject;
		allVTables [2] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate StorageTestSetScan to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		StorageGetData tempObject;
		allVTables [3] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate StorageGetData to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		Nothing tempObject;
		allVTables [4] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate Nothing to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		DispatcherAddData tempObject;
		allVTables [5] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate DispatcherAddData to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		CatCreateDatabaseRequest tempObject;
		allVTables [6] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate CatCreateDatabaseRequest to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		Object tempObject;
		allVTables [7] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate Object to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		StoragePagePinned tempObject;
		allVTables [8] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate StoragePagePinned to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		BackendExecuteSelection tempObject;
		allVTables [9] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate BackendExecuteSelection to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		CatTypeSearchResult tempObject;
		allVTables [10] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate CatTypeSearchResult to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		CatTypeNameSearchResult tempObject;
		allVTables [11] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate CatTypeNameSearchResult to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		ExecuteQueryOnSingleHost tempObject;
		allVTables [12] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate ExecuteQueryOnSingleHost to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		Ack tempObject;
		allVTables [13] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate Ack to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		KeepGoing tempObject;
		allVTables [14] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate KeepGoing to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		StorageRemoveUserSet tempObject;
		allVTables [15] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate StorageRemoveUserSet to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		StorageAddDatabase tempObject;
		allVTables [16] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate StorageAddDatabase to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		ExecuteQueriesOnCluster tempObject;
		allVTables [17] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate ExecuteQueriesOnCluster to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		DoneWithResult tempObject;
		allVTables [18] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate DoneWithResult to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		StorageTestSetCopy tempObject;
		allVTables [19] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate StorageTestSetCopy to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		ExecuteQuery tempObject;
		allVTables [20] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate ExecuteQuery to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		GetListOfNodes tempObject;
		allVTables [21] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate GetListOfNodes to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		SetScan tempObject;
		allVTables [22] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate SetScan to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		QueryDone tempObject;
		allVTables [23] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate QueryDone to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		StorageNoMorePage tempObject;
		allVTables [24] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate StorageNoMorePage to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		CatSharedLibraryResult tempObject;
		allVTables [25] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate CatSharedLibraryResult to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		RequestResources tempObject;
		allVTables [26] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate RequestResources to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		PlaceOfQueryPlanner tempObject;
		allVTables [27] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate PlaceOfQueryPlanner to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		StorageAddTempSet tempObject;
		allVTables [28] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate StorageAddTempSet to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		StorageGetDataResponse tempObject;
		allVTables [29] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate StorageGetDataResponse to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		Handle <Nothing> tempObject;
		allVTables [30] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate Handle <Nothing> to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		StorageAddSet tempObject;
		allVTables [31] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate StorageAddSet to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		StorageUnpinPage tempObject;
		allVTables [32] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate StorageUnpinPage to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		Company tempObject;
		allVTables [33] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate Company to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		CloseConnection tempObject;
		allVTables [34] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate CloseConnection to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		CatSetObjectTypeRequest tempObject;
		allVTables [35] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate CatSetObjectTypeRequest to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		ListOfNodes tempObject;
		allVTables [36] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate ListOfNodes to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		Map <Nothing> tempObject;
		allVTables [37] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate Map <Nothing> to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		MyEmployee tempObject;
		allVTables [38] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate MyEmployee to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		String tempObject;
		allVTables [39] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate String to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		Vector <Nothing> tempObject;
		allVTables [40] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate Vector <Nothing> to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		BackendTestSetScan tempObject;
		allVTables [41] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate BackendTestSetScan to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		ShutDown tempObject;
		allVTables [42] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate ShutDown to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		DispatcherRegisterPartitionPolicy tempObject;
		allVTables [43] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate DispatcherRegisterPartitionPolicy to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		StorageAddType tempObject;
		allVTables [44] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate StorageAddType to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		CheckEmployee tempObject;
		allVTables [45] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate CheckEmployee to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		PairArray <Nothing> tempObject;
		allVTables [46] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate PairArray <Nothing> to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		Supervisor tempObject;
		allVTables [47] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate Supervisor to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		QueryPermitResponse tempObject;
		allVTables [48] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate QueryPermitResponse to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		CatSharedLibraryRequest tempObject;
		allVTables [49] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate CatSharedLibraryRequest to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		StorageAddTempSetResult tempObject;
		allVTables [50] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate StorageAddTempSetResult to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		CatCreateSetRequest tempObject;
		allVTables [51] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate CatCreateSetRequest to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		NodeDispatcherData tempObject;
		allVTables [52] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate NodeDispatcherData to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		QueryOutput <Nothing> tempObject;
		allVTables [53] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate QueryOutput <Nothing> to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		StorageGetSetPages tempObject;
		allVTables [54] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate StorageGetSetPages to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		QueryPermit tempObject;
		allVTables [55] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate QueryPermit to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		StoragePinPage tempObject;
		allVTables [56] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate StoragePinPage to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		BackendTestSetCopy tempObject;
		allVTables [57] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate BackendTestSetCopy to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		DeleteSet tempObject;
		allVTables [58] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate DeleteSet to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		StorageAddData tempObject;
		allVTables [59] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate StorageAddData to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		StorageRemoveTempSet tempObject;
		allVTables [60] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate StorageRemoveTempSet to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		Set <Nothing> tempObject;
		allVTables [61] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate Set <Nothing> to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		CatTypeNameSearch tempObject;
		allVTables [62] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate CatTypeNameSearch to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		NodeInfo tempObject;
		allVTables [63] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate NodeInfo to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		SimpleRequestResult tempObject;
		allVTables [64] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate SimpleRequestResult to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		CatRegisterType tempObject;
		allVTables [65] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate CatRegisterType to extract the vTable.\n";
	}
}

{
	const UseTemporaryAllocationBlock tempBlock{1024 * 24};
	try {
		Array <Nothing> tempObject;
		allVTables [66] = tempObject.getVTablePtr ();
	} catch (NotEnoughSpace &e) {
		std :: cout << "Not enough memory to allocate Array <Nothing> to extract the vTable.\n";
	}
}

